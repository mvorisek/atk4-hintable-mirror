includes:
    - phar://phpstan.phar/conf/bleedingEdge.neon
    # remove once https://github.com/phpstan/extension-installer/issues/36 is fixed
    - phpstan-ext.neon

services:
    -
        factory: Mvorisek\Atk4\Hintable\Phpstan\SeedDmrtExtension(Mvorisek\Atk4\Hintable\Tests\Phpstan\SeedDemo\Bodyshop, acceptCar, 1)
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
    -
        factory: Mvorisek\Atk4\Hintable\Phpstan\SeedDmrtExtension(Mvorisek\Atk4\Hintable\Tests\Phpstan\SeedDemo\Car, fromSeed, 0)
        tags:
            - phpstan.broker.dynamicStaticMethodReturnTypeExtension

parameters:
    level: 6
    paths:
        - ./
    excludePaths:
        - vendor/

    ignoreErrors:
        # relax strict rules
        - '~^Variable (static )?(property access|method call) on .+\.~'

        -
            message: '~^Function class_uses\(\) is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine\. Use objects retrieved from ReflectionProvider instead\.$~'
            path: 'src/Phpstan/AssertSamePhpstanTypeRule.php'
            count: 1
        -
            message: '~^Function class_parents\(\) is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine\. Use objects retrieved from ReflectionProvider instead\.$~'
            path: 'src/Phpstan/AssertSamePhpstanTypeRule.php'
            count: 1
        -
            message: '~^Trait Mvorisek\\Atk4\\Hintable\\Data\\HintableModelTrait is used zero times and is not analysed\.$~'
            path: 'src/Data/HintableModelTrait.php'
            count: 1
        -
            message: '~^Creating new ReflectionMethod is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine\. Use objects retrieved from ReflectionProvider instead\.$~'
            path: 'src/Phpstan/SeedDmrtExtension.php'
            count: 1
        -
            message: '~^Extending PHPStan\\Reflection\\Annotations\\AnnotationMethodReflection is not covered by backward compatibility promise\. The class might change in a minor PHPStan version\.$~'
            path: 'src/Phpstan/WrapMethodReflection.php'
            count: 1
        -
            message: '~^Calling PHPStan\\Reflection\\Annotations\\AnnotationMethodReflection::__construct\(\) is not covered by backward compatibility promise\. The method might change in a minor PHPStan version\.$~'
            path: 'src/Phpstan/WrapMethodReflection.php'
            count: 1
        -
            message: '~^Extending PHPStan\\Reflection\\Annotations\\AnnotationPropertyReflection is not covered by backward compatibility promise\. The class might change in a minor PHPStan version\.$~'
            path: 'src/Phpstan/WrapPropertyReflection.php'
            count: 1
        -
            message: '~^Calling PHPStan\\Reflection\\Annotations\\AnnotationPropertyReflection::__construct\(\) is not covered by backward compatibility promise\. The method might change in a minor PHPStan version\.$~'
            path: 'src/Phpstan/WrapPropertyReflection.php'
            count: 1
